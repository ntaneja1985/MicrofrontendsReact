//merge the common and prod.js file
const {merge} = require('webpack-merge');
const ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin');
const commonConfig = require('./webpack.common.js');
const packageJson = require('../package.json');

const domain = process.env.PRODUCTION_DOMAIN;

const prodConfig = {
    //When we set mode to production, Module Federation Plugin will optimize JS files
    //It will bundle and minify them for production
    mode: 'production',
    output: {
        //All files for production will use this as a template to name them
        //This will fix the caching issues
        filename: '[name].[contenthash].js',
        //Take all the filenames generated by MFP plugin and pre-pend them with this path
        publicPath: '/container/latest/'
    },
    plugins: [
        new ModuleFederationPlugin({
            name: 'container',
            remotes: {
                //fetch the remote entry file from the domain specified in environment variables
                marketing: `marketing@${domain}/marketing/latest/remoteEntry.js`,
                auth: `auth@${domain}/auth/latest/remoteEntry.js`,
                dashboard: `dashboard@${domain}/dashboard/latest/remoteEntry.js`,
            },
            shared: packageJson.dependencies,
        }),
    ]
};

module.exports = merge(commonConfig, prodConfig);